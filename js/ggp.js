// Parser for http://gungeongod.com/

var fs = require('fs');
var Crawler = require("crawler");
var format = require('string-format');

function handle(callback) {
    return function(error, res, done) {
        if (error) {
            console.log(error);
        } else {
            // console.log(res.body);
            // callback(cheerio.load(res.body));
            callback(res.$);
            // $ is Cheerio by default
            //a lean implementation of core jQuery designed specifically for the server
            // console.log($("title").text());
        }
    }
}

function escapeAndStringifyJson(json) {
    return JSON.stringify(json)
        .replace(/\\"/g, '\'')
        .replace(/\\/g, '\\\\')
        .replace(/"/g, '\\\"');
}

var c = new Crawler({
    maxConnections: 10
});
c.queue([{
    uri: 'http://gungeongod.com/',
    callback: handle(parse)
}]);

var FILE_FORMAT = "// GENERATED BY ggp.js\n" +
    "public class NoBrainJsonDB {\n" +
    "    public static readonly string ITEM_JSON = \"{}\";\n" +
    "    public static readonly string SHRINE_JSON = \"{}\";\n" +
    "}";

var replacements = {
    "AK-47": "15",
    "Magic Lamp": "0",
    "Turbo-Gun": "577",
    "Ring of Chest Friendship": "254",
    "Gnawed Key": "316",
    "Infuriating Note": "243", // 243 - 248
    "Table Tech Shotgun": "5002",
    "Clown Mask": "607",
    "Drill": "625",
    "Loot Bag": "605"
};

function parse($) {
    var getText = function() { return $(this).text() };
    
    var parseItem = function (targetJsonArray) {
        return function () {
            var t = $(this);
            var p = t.parent();

            var desc = p.find('div.sp-text > ul:not(.sp-stats) > li:not(.unlock)')
                .map(getText)
                .get().join('\n');
            var stats = p.find('div.sp-text > ul.sp-stats > li')
                .map(getText)
                .filter(function () {
                    return !this.startsWith("Quality")
                })
                .get().join('\n');

            var id = p.find('div.sp-text > span.itemid').text().substring(8);
            var name = p.find('div.sp-text > h3').text();
            var newId = replacements[name];
            if (newId !== undefined) {
                id = newId;
            }
            
            targetJsonArray.push({
                id: id,
                name: name,
                desc: desc,
                stats: stats
            });
        }
    };
    var parseShrine = function (targetJsonArray) {
        return function () {
            var t = $(this);
            var p = t.parent();

            var name = p.find('div.sp-text > h3')
                .map(getText)
                .get().join('\n');
            var desc = p.find('div.sp-text > ul > li')
                .map(getText)
                .filter(function () {
                    return !this.startsWith("Quality")
                })
                .get().join('\n');

            targetJsonArray.push({
                name: name,
                desc: desc
            });
        }
    };

    var itemsJsonArray = [];
    var shrinesJsonArray = [];
    
    $('.sp.gun').each(parseItem(itemsJsonArray));
    $('.sp.item').each(parseItem(itemsJsonArray));
    $('.sp.shrine').each(parseShrine(shrinesJsonArray));
    
    console.log(JSON.stringify(itemsJsonArray));
    console.log(JSON.stringify(shrinesJsonArray));
    
    var fileString = format(FILE_FORMAT,
        escapeAndStringifyJson(itemsJsonArray),
        escapeAndStringifyJson(shrinesJsonArray));
    
    fs.writeFile("../src/NoBrainJsonDB.cs", fileString, function(err) {
        if(err) {
            return console.log(err);
        }
        console.log("The file was saved!");
    });
}